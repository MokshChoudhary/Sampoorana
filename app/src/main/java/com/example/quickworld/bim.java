package com.example.quickworld;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.core.app.ActivityCompat;import androidx.core.content.ContextCompat;import android.Manifest;import android.content.Intent;import android.content.pm.PackageManager;import android.location.Location;import android.location.LocationListener;import android.location.LocationManager;import android.os.Bundle;import android.provider.Settings;import android.telephony.SmsManager;import android.view.View;import android.widget.Toast;public class bim extends AppCompatActivity {    private final static int SEND_SMS_PERMISSION_REQUEST_CODE = 111;    private LocationManager locationManager;    private LocationListener locationListener;    private datahandle datah;    Toast x;    private String la = "" , ln = "";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_bim);        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);        locationListener = new LocationListener() {            @Override            public void onLocationChanged(Location location) {                la = location.getLatitude() + "";                ln = location.getLongitude() + "";            }            @Override            public void onStatusChanged(String s, int i, Bundle bundle) {            }            @Override            public void onProviderEnabled(String s) {            }            @Override            public void onProviderDisabled(String s) {                startActivity(new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS));            }        };        if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {            requestPermissions(new String[]{                    Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION,                    Manifest.permission.INTERNET            }, 10);            return;        } else {            locationManager.requestLocationUpdates("gps", 500, 0, locationListener);        }// Here, thisActivity is the current activity        if (ContextCompat.checkSelfPermission(this,                Manifest.permission.SEND_SMS)                != PackageManager.PERMISSION_GRANTED) {            // Permission is not granted            // Should we show an explanation?            if (ActivityCompat.shouldShowRequestPermissionRationale(this,                    Manifest.permission.SEND_SMS)) {                // Show an explanation to the user *asynchronously* -- don't block                // this thread waiting for the user's response! After the user                // sees the explanation, try again to request the permission.            } else {                // No explanation needed; request the permission                ActivityCompat.requestPermissions(this,                        new String[]{Manifest.permission.SEND_SMS},                        SEND_SMS_PERMISSION_REQUEST_CODE);                // MY_PERMISSIONS_REQUEST_READ_CONTACTS is an                // app-defined int constant. The callback method gets the                // result of the request.            }        } else {            // Permission has already been granted            findViewById(R.id.help_call).setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    SmsManager msg = SmsManager.getDefault();                    msg.sendTextMessage(datahandle.ph+"", null, "http://maps.google.com/?q=" + la + "," + ln, null, null);                    Toast x = Toast.makeText(getApplicationContext(), "Message is send to "+datahandle.ph, Toast.LENGTH_SHORT);                    x.show();                }            });        }        findViewById(R.id.setting).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                startActivity(new Intent(bim.this, Setting.class));            }        });    }    @Override    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {        switch (requestCode) {            case 10:                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED)                    if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {                        requestPermissions(new String[]{                                Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION,                                Manifest.permission.INTERNET                        }, 10);                        return;                    }else{                        locationManager.requestLocationUpdates("gps", 500, 0, locationListener);                    }                return;        }    }}